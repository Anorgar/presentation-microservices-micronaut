
plugins {
    id "com.github.johnrengelman.shadow" version "4.0.2"
    id "io.spring.dependency-management" version "1.0.6.RELEASE"
    id "java"
    id "net.ltgt.apt-idea" version "0.21"
    id "application"
}

apply plugin: 'com.github.johnrengelman.shadow'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'net.ltgt.apt-idea'

dependencyManagement {
    imports {
        mavenBom 'io.micronaut:micronaut-bom:1.3.3'
    }
}

repositories {
    mavenCentral()
}

wrapper {
    distributionType = Wrapper.DistributionType.BIN
}


dependencies {
    annotationProcessor("org.projectlombok:lombok:1.18.8")
    annotationProcessor("io.micronaut:micronaut-inject-java")
    annotationProcessor("io.micronaut:micronaut-validation")
    annotationProcessor("io.micronaut.data:micronaut-data-processor")


    compile project(":common")

    //Micronaut core imports
    compile("io.micronaut.data:micronaut-data-hibernate-jpa")

    implementation("com.h2database:h2")
    runtimeOnly("io.micronaut.configuration:micronaut-jdbc-hikari")

    compileOnly('org.projectlombok:lombok:1.18.8')
    runtime("ch.qos.logback:logback-classic:1.2.3")

    testAnnotationProcessor("io.micronaut:micronaut-inject-java")
    testImplementation("org.junit.jupiter:junit-jupiter-api")
    testImplementation("io.micronaut.test:micronaut-test-junit5")
    testImplementation("io.rest-assured:rest-assured:3.+")
    testImplementation("io.rest-assured:json-schema-validator:3.+")
    testImplementation("org.mockito:mockito-core:2.28.2")
    testImplementation("org.assertj:assertj-core:3.14.0")

    testRuntime("org.junit.jupiter:junit-jupiter-engine")
    testAnnotationProcessor("org.projectlombok:lombok:1.18.8")
}

mainClassName = "fr.micronaut.presentation.petcore.Application"
// use JUnit 5 platform
test {
    useJUnitPlatform()
}
tasks.withType(JavaCompile){
    options.encoding = "UTF-8"
    options.compilerArgs.add('-parameters')
}

shadowJar {
    mergeServiceFiles()
}

run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote', '-Dmicronaut.environments=dev')
